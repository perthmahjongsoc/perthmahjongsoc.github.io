#!/usr/bin/env python3

"""
# scoring.py

Generate `scores/*.cmdr` used by `scores/index.cmd`.

To be called by `./build` in the root directory,
after mahjong-scorer generates `scores*.tsv`
but before conway-markdown generates `scores/index.html`.
"""

import re


def split(line):
    return line.strip().split('\t')


def nicify_header(header):
    return header.replace('_', ' ').title()


def nicify_data(data):
    return re.sub('^-', 'âˆ’', data)  # U+2212 MINUS SIGN


def tsv_to_cmdr(tsv_file_name, cmdr_file_name, cmdr_base_name):
    with open(tsv_file_name, 'r', encoding='utf-8') as tsv_file:
        lines = tsv_file.readlines()

    head_line = lines[0]
    body_lines = lines[1:-1]
    foot_line = lines[-1]

    head_content = [
        '        //\n' + '\n'.join(f'          ; {nicify_header(header)}' for header in split(head_line))
    ]
    body_content = [
        '        //\n' + '\n'.join(f'          , {nicify_data(data)}' for data in split(body_line))
        for body_line in body_lines
    ]
    foot_content = [
        '        //\n' + '\n'.join(f'          , {nicify_data(data)}' for data in split(foot_line))
    ]

    cmdr_content = '\n'.join([
        '# Automatically generated by `./build` in the root directory.',
        '',
        f'OrdinaryDictionaryReplacement: #.{cmdr_base_name}',
        '- queue_position: BEFORE #divisions',
        '* %score-table -->',
        '  ||{.wide}',
        "    ''",
        '      |^',
        *head_content,
        '      |:',
        *body_content,
        '      |_',
        *foot_content,
        "    ''",
        '  ||',
        '',
    ])

    with open(cmdr_file_name, 'w', encoding='utf-8')as cmdr_file:
        cmdr_file.write(cmdr_content)


def main():
    tsv_to_cmdr('scores/scores.txt.tsv', 'scores/scores-all-time.cmdr', cmdr_base_name='scores-all-time')


if __name__ == '__main__':
    main()
